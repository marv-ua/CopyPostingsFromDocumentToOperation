
&НаКлиенте
Процедура Скопировать(Команда)   
	
	Если НЕ ЗначениеЗаполнено(Объект.Док) ИЛИ НЕ ЗначениеЗаполнено(Объект.ДокОперация) Тогда
		Сообщить(НСтр("ru = 'Необходимо заполнить документы'; uk = 'Необхідно заповнити документи'"));
		Возврат;
	КонецЕсли;	
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект)
		, НСтр("ru = 'Проводки документа будут скопированы в операцию. Продолжить?'; uk = 'Проводки документу буде скопійовано в операцію. Продовжити?'")
		, РежимДиалогаВопрос.ДаНет
		, 
		, КодВозвратаДиалога.Да
		, НСтр("ru = 'Скопировать проводки?'; uk = 'Скопіювати проводки?'")
		,
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	 
	
	ВыполнитьКопированиеНаСервере();
	
КонецПроцедуры	 

&НаСервере
Процедура ВыполнитьКопированиеНаСервере() 
	
	ДокОперацияСсылка = Объект.ДокОперация;
	
	// возьмем проводки документа
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Объект.Док);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйДвиженияССубконто.Период КАК Период,
	               |	ХозрасчетныйДвиженияССубконто.Активность КАК Активность,
	               |	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
	               |	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	               |	ХозрасчетныйДвиженияССубконто.ВидСубконтоДт1 КАК ВидСубконтоДт1,
	               |	ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	               |	ХозрасчетныйДвиженияССубконто.ВидСубконтоДт2 КАК ВидСубконтоДт2,
	               |	ХозрасчетныйДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
	               |	ХозрасчетныйДвиженияССубконто.ВидСубконтоДт3 КАК ВидСубконтоДт3,
	               |	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
	               |	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	               |	ХозрасчетныйДвиженияССубконто.ВидСубконтоКт1 КАК ВидСубконтоКт1,
	               |	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	               |	ХозрасчетныйДвиженияССубконто.ВидСубконтоКт2 КАК ВидСубконтоКт2,
	               |	ХозрасчетныйДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
	               |	ХозрасчетныйДвиженияССубконто.ВидСубконтоКт3 КАК ВидСубконтоКт3,
	               |	ХозрасчетныйДвиженияССубконто.Организация КАК Организация,
	               |	ХозрасчетныйДвиженияССубконто.ВалютаДт КАК ВалютаДт,
	               |	ХозрасчетныйДвиженияССубконто.ВалютаКт КАК ВалютаКт,
	               |	ХозрасчетныйДвиженияССубконто.НалоговоеНазначениеДт КАК НалоговоеНазначениеДт,
	               |	ХозрасчетныйДвиженияССубконто.НалоговоеНазначениеКт КАК НалоговоеНазначениеКт,
	               |	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
	               |	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
	               |	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
	               |	ХозрасчетныйДвиженияССубконто.КоличествоДт КАК КоличествоДт,
	               |	ХозрасчетныйДвиженияССубконто.КоличествоКт КАК КоличествоКт,
	               |	ХозрасчетныйДвиженияССубконто.СуммаНУДт КАК СуммаНУДт,
	               |	ХозрасчетныйДвиженияССубконто.СуммаНУКт КАК СуммаНУКт,
	               |	ХозрасчетныйДвиженияССубконто.Содержание КАК Содержание,
	               |	ХозрасчетныйДвиженияССубконто.НомерЖурнала КАК НомерЖурнала,
	               |	ХозрасчетныйДвиженияССубконто.СчетДополнительный КАК СчетДополнительный,
	               |	ХозрасчетныйДвиженияССубконто.НеКорректироватьСтоимостьАвтоматически КАК НеКорректироватьСтоимостьАвтоматически,
	               |	ХозрасчетныйДвиженияССубконто.НомерИсходнойПроводки КАК НомерИсходнойПроводки
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто КАК ХозрасчетныйДвиженияССубконто
	               |ГДЕ
	               |	ХозрасчетныйДвиженияССубконто.Регистратор = &Регистратор";
	ТаблицаПроводок = Запрос.Выполнить().Выгрузить();  
	
	Если ТаблицаПроводок.Количество() > 0 Тогда
	    РегХозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
        РегХозрасчетный.Отбор.Регистратор.Значение = ДокОперацияСсылка;  
		
        Для Каждого Строка из ТаблицаПроводок Цикл
        
            РегЗапись = РегХозрасчетный.Добавить();
			ЗаполнитьЗначенияСвойств(РегЗапись, Строка);
			РегЗапись.Период = ДокОперацияСсылка.Дата;
            РегЗапись.Регистратор = ДокОперацияСсылка;
            
            БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетДт, РегЗапись.СубконтоДт, 1, Строка.СубконтоДт1);
			БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетДт, РегЗапись.СубконтоДт, 2, Строка.СубконтоДт2);
			БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетДт, РегЗапись.СубконтоДт, 3, Строка.СубконтоДт3);
            БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетКт, РегЗапись.СубконтоКт, 1, Строка.СубконтоКт1);
			БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетКт, РегЗапись.СубконтоКт, 2, Строка.СубконтоКт2);
			БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетКт, РегЗапись.СубконтоКт, 3, Строка.СубконтоКт3);            
        
        КонецЦикла;
        РегХозрасчетный.Записать();	
		
	КонецЕсли;	
	
КонецПроцедуры	