
&НаКлиенте
Процедура Скопировать(Команда)   
	
	Если НЕ ЗначениеЗаполнено(Объект.Док) ИЛИ НЕ ЗначениеЗаполнено(Объект.ДокОперация) Тогда
		Сообщить(НСтр("ru = 'Необходимо заполнить документы'; uk = 'Необхідно заповнити документи'"));
		Возврат;
	КонецЕсли;	
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект)
		, НСтр("ru = 'Проводки документа будут скопированы в операцию. Продолжить?'; uk = 'Проводки документу буде скопійовано в операцію. Продовжити?'")
		, РежимДиалогаВопрос.ДаНет
		, 
		, КодВозвратаДиалога.Да
		, НСтр("ru = 'Скопировать проводки?'; uk = 'Скопіювати проводки?'")
		,
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	 
	
	ВыполнитьКопированиеНаСервере();
	
КонецПроцедуры	 

&НаСервере
Процедура ВыполнитьКопированиеНаСервере() 
	
	ДокОперацияСсылка = Объект.ДокОперация;  
	
	Проводки = Объект.Док.ПолучитьОбъект().Движения.Хозрасчетный; 
	Проводки.Прочитать();
	
	
	Если Проводки.Количество() > 0 Тогда
	    РегХозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
        РегХозрасчетный.Отбор.Регистратор.Значение = ДокОперацияСсылка;  
		
        Для Каждого Строка из Проводки Цикл
        
            РегЗапись = РегХозрасчетный.Добавить();
			ЗаполнитьЗначенияСвойств(РегЗапись, Строка);
			РегЗапись.Период = ДокОперацияСсылка.Дата;
            РегЗапись.Регистратор = ДокОперацияСсылка;
			
			Для Каждого ТекСубконто Из Строка.СубконтоДт Цикл
            	БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетДт, РегЗапись.СубконтоДт, ТекСубконто.Ключ, ТекСубконто.Значение);
			КонецЦикла;	
			Для Каждого ТекСубконто Из Строка.СубконтоКт Цикл
            	БухгалтерскийУчет.УстановитьСубконто(РегЗапись.СчетКт, РегЗапись.СубконтоКт, ТекСубконто.Ключ, ТекСубконто.Значение);
			КонецЦикла;			
           
        КонецЦикла;
        РегХозрасчетный.Записать();	
		
	КонецЕсли;	
	
КонецПроцедуры	